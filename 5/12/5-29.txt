#!/bin/bash

declare -A group_map

while read -r resource; do
  # Get Kind and API Group/Version from oc explain
  output=$(oc explain "$resource" 2>/dev/null | awk '/KIND:/ {kind=$2} /VERSION:/ {version=$2} /GROUP:/ {group=$2} END { print group "/" version "/" kind }')
  if [[ -n "$output" ]]; then
    group_version="${output%/*/*}"  # Extract group/version (e.g., apiextensions.k8s.io/v1)
    kind="${output##*/}"           # Extract kind (e.g., Subscription)

    # Validate group_version and kind before using them as array keys
    if [[ -n "$group_version" && -n "$kind" ]]; then
      group_map["$group_version"]+="$kind,"
    else
      echo "Invalid data for resource: $resource"
    fi
  else
    echo "Resource not found: $resource"
  fi
done < resources.txt

# Print grouped results
for group_version in "${!group_map[@]}"; do
  kinds=${group_map[$group_version]%,}  # Remove trailing comma
  echo "$group_version: $kinds"
done