#!/bin/bash

declare -A group_map

while read -r resource; do
  # Get Kind, API Group, and Version from oc explain
  output=$(oc explain "$resource" 2>/dev/null | awk '/KIND:/ {kind=$2} /VERSION:/ {version=$2} /GROUP:/ {group=$2} END { print (group ? group : "core") "/" version "/" kind }')
  if [[ -n "$output" ]]; then
    group_version="${output%/*/*}"  # Extract group/version (e.g., apiextensions.k8s.io/v1)
    kind="${output##*/}"           # Extract kind (e.g., Subscription)

    # Validate group_version and kind before using them as array keys
    if [[ -n "$group_version" && -n "$kind" ]]; then
      group_map["$group_version"]+="$kind,"
    else
      echo "Invalid data for resource: $resource"
    fi
  else
    echo "Resource not found: $resource"
  fi
done < resources.txt

# Print grouped results
for group_version in "${!group_map[@]}"; do
  kinds=${group_map[$group_version]%,}  # Remove trailing comma
  echo "$group_version: $kinds"
done


///////////////////////////////////////////////

1. constraints.gatekeeper.sh/v1beta1: K8sAllowedRepos,K8sBlockNodePort,K8sPSPAllowedUsers,K8sPSPAllowPrivilegeEscalationContainer,K8sPSPCapabilities,K8sPSPCapabilities-imageexception, K8sPSPHostFilesystem,K8sPSPHostFilesystem-imageexception,K8sPSPHostNetworkingPorts,K8sPSPPrivilegedContainer,K8sPSPReadOnlyRootFilesystem,K8sPSPVolumeTypes,vzsec-anonymous

2. networking.istio.io: DestinationRule,EnvoyFilter,Gateway,ProxyConfig,ServiceEntry,Sidecar,VirtualService,WorkloadEntry,WorkloadGroup

3. grafana.integreatly.org: GrafanaDashboard,GrafanaDatasource,GrafanaFolder,Grafana

4. monitoring.coreos.com: AlertmanagerConfig,Alertmanager,PodMonitor,Probe,Prometheus,PrometheusRule,ServiceMonitor,ThanosRuler

5. machineconfiguration.openshift.io: MachineConfig

6. apps.open-cluster-management.io: Subscription,SubscriptionStatus

7. controlplane.operator.openshift.io: PodNetworkConnectivityCheck

8. monitoring.openshift.io: AlertingRule,AlertRelabelConfig

9. metal3.io: BareMetalHost,BMCEventSubscription,FirmwareSchema,HardwareData,HostFirmwareSettings,PreprovisioningImage,Provisioning



//////

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-cluster-role
rules:
  - apiGroups:
      - "constraints.gatekeeper.sh/v1beta1"
    resources:
      - K8sAllowedRepos
      - K8sBlockNodePort
      - K8sPSPAllowedUsers
      - K8sPSPAllowPrivilegeEscalationContainer
      - K8sPSPCapabilities
      - K8sPSPCapabilities-imageexception
      - K8sPSPHostFilesystem
      - K8sPSPHostFilesystem-imageexception
      - K8sPSPHostNetworkingPorts
      - K8sPSPPrivilegedContainer
      - K8sPSPReadOnlyRootFilesystem
      - K8sPSPVolumeTypes
      - vzsec-anonymous
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "networking.istio.io"
    resources:
      - DestinationRule
      - EnvoyFilter
      - Gateway
      - ProxyConfig
      - ServiceEntry
      - Sidecar
      - VirtualService
      - WorkloadEntry
      - WorkloadGroup
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "grafana.integreatly.org"
    resources:
      - GrafanaDashboard
      - GrafanaDatasource
      - GrafanaFolder
      - Grafana
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "monitoring.coreos.com"
    resources:
      - AlertmanagerConfig
      - Alertmanager
      - PodMonitor
      - Probe
      - Prometheus
      - PrometheusRule
      - ServiceMonitor
      - ThanosRuler
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "machineconfiguration.openshift.io"
    resources:
      - MachineConfig
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "apps.open-cluster-management.io"
    resources:
      - Subscription
      - SubscriptionStatus
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "controlplane.operator.openshift.io"
    resources:
      - PodNetworkConnectivityCheck
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "monitoring.openshift.io"
    resources:
      - AlertingRule
      - AlertRelabelConfig
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch
  - apiGroups:
      - "metal3.io"
    resources:
      - BareMetalHost
      - BMCEventSubscription
      - FirmwareSchema
      - HardwareData
      - HostFirmwareSettings
      - PreprovisioningImage
      - Provisioning
    verbs:
      - get
      - create
      - update
      - delete
      - patch
      - list
      - watch

